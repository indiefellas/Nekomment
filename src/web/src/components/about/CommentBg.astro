<script>
import { mathematica } from "svelte-highlight/languages";
import { genRandomComment } from "../../lib/randomComment";
    const reducedMotion = matchMedia("(prefers-reduced-motion: reduce)");
    
    let commentHolder: HTMLElement;
    let lastMobileMode;

    let delta, time = performance.now();
    let offset = 0, xOffset = 0, yOffset = 0;

    let comments: HTMLElement[] = [];

    function random(min: number, max: number) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function makeComment() {
        const lightMode = 
            document.body.classList.contains('light') ||
            localStorage.getItem('nkm:theme') === 'light';
        const comment = genRandomComment();
        const commentContainer = document.createElement("article");
        commentContainer.className = "bg-comment";
        commentContainer.innerHTML = `<div><h2>${comment.author}</h2><p>${comment.comment}</p></div>`;
        const repliesContainer = document.createElement("div");
        repliesContainer.className = "bg-replies";
        comment.replies.forEach((r) => {
            const reply = document.createElement("blockquote");
            reply.innerHTML = `<h3>${r.author}</h3><p>${r.comment}</p>`;
            repliesContainer.appendChild(reply);
        });
        if (comment.replies.length > 0)
            commentContainer.appendChild(repliesContainer);
        if (lightMode) commentContainer.setAttribute('data-light', 'true');
        commentContainer.setAttribute("data-variant", random(0, 10) + "");
        commentHolder.appendChild(commentContainer);
        return commentContainer;
    }

    function bgLoop() {
        delta = performance.now() - time;
        time += delta;

        const vw = Math.max(
            document.documentElement.clientWidth || 0,
            window.innerWidth || 0,
        );
        const vh = Math.max(
            document.documentElement.clientHeight || 0,
            window.innerHeight || 0,
        );

        if (!reducedMotion.matches) {
            offset += delta / 50;
            commentHolder.style.setProperty("--offset", offset + "px");
        }

        if (comments[0] && parseInt(comments[0].style.left) < -510 + offset) {
            comments.shift()!.remove();
        }
        if (!comments[0] || xOffset < offset + vw) {
            const comment = makeComment();
            comment.style.top = xOffset * 0.12 + yOffset + "px";
            comment.style.left = xOffset + "px";
            yOffset += comment.clientHeight + 10;
            if (yOffset > vh) {
                yOffset = vw * -0.12;
                xOffset += comment.clientWidth + 10;
            }
            comments.push(comment);
        }

        setTimeout(bgLoop, 50);
    }

    document.addEventListener("DOMContentLoaded", () => {
        commentHolder = document.querySelector(".comment-holder")!;
        bgLoop();
    });
</script>

<div class="background" aria-hidden="true">
    <div class="comment-holder"></div>
    <div class="bg-gradient"></div>
</div>

<style scoped>
    @font-face {
        font-family: "Flow Rounded";
        src: url(/fonts/FlowRounded-Regular.ttf);
    }

    .background {
        position: absolute;
        inset: 0;
        z-index: -1;
        opacity: 0.25;
        overflow: hidden;
        height: calc(100dvh + 12px);
        
        .bg-gradient {
            position: relative;
            top: 0;
            left: 0;
            width: 50dvw;
            height: calc(100dvh + 12px);
            background-image: linear-gradient(
                to left,
                transparent,
                var(--background-0)
            );
        }

        .comment-holder {
            position: absolute;
            inset: 0;
            transform: translate(calc(var(--offset) * -1), calc(var(--offset) * -0.13));
            transition: transform 0.12s;
        }
    }

    .background :global(.bg-comment) {
        --blocky-bg: var(--background-2);
        width: 60%;
        display: flex;
        flex-direction: column;
        z-index: -2;
        gap: 12px;
        min-width: 200px;
        max-width: 500px;
        padding: 6px 18px 18px 18px;
        background: var(--background-3);
        font-family: "Flow Rounded", cursive;
        font-size: 2rem;
        line-height: 0.7;
        position: absolute;
        border-radius: 5px;
        transform: skewY(-6deg);
        animation: comment-fly-in cubic-bezier(0.075, 0.82, 0.165, 1) 2.5s, comment-fly-in-2 ease-out 2.5s;
        box-shadow: 
            1px 1px var(--blocky-bg), 2px 2px var(--blocky-bg), 
            3px 3px var(--blocky-bg), 4px 4px var(--blocky-bg), 
            5px 5px var(--blocky-bg), 6px 6px var(--blocky-bg), 
            7px 7px var(--blocky-bg), 8px 8px var(--blocky-bg), 
            9px 9px var(--blocky-bg), 10px 10px 10px #0007;

        .bg-replies {
            display: flex;
            gap: 6px;
            flex-direction: column;
            margin-left: 24px;

            blockquote {
                padding: 6px 18px 18px 18px;
            }
        }

        p {
            opacity: 0.5;
        }

        * {
            overflow-wrap: normal;
            text-overflow: clip;
        }

        &:not([data-light])[data-variant="1"] {
            background: url(/_assets/veryspace.png);
            --blocky-bg: black;
            color: white;
            border-radius: 0;

            blockquote {
                background: #000;
                border: 1px solid white;
                border-radius: 0;
            }
        }
        &:not([data-light])[data-variant="2"] {
            background: #3d2c66;
            --blocky-bg: #bbffca;
            border: 1px solid #bbffca;
            color: #bbffca;
            border-radius: 0;

            blockquote {
                background: #19033dc4;
                border: 1px solid #bbffca;
                border-radius: 0;
            }
        }
        &:not([data-light])[data-variant="3"] {
            background: #504945;
            --blocky-bg: #32302f;
            color: #e8dbb2;
            border-radius: 0;

            blockquote {
                background: #32302f;
                border: none;
                border-radius: 0;
            }
        }

        &[data-light][data-variant="1"] {
            background: white;
            --blocky-bg: #aaa;
            color: #000;
            border-radius: 0;

            blockquote {
                background: #0001;
                border: 1px solid white;
                border-radius: 0;
            }
        }
        &[data-light][data-variant="2"] {
            background: #fffffa;
            --blocky-bg: #000;
            color: #000;
            border: 1px solid #000;
            border-radius: 5px;

            blockquote {
                background: #ffffff;
                border: none;
                border: 1px solid #000;
                border-radius: 3px;
            }
        }
        &[data-light][data-variant="3"] {
            background: #d5c4a1;
            --blocky-bg: #f2e5bc;
            color: #3c3836;
            border-radius: 0;

            blockquote {
                background: #f2e5bc;
                border: none;
                border-radius: 0;
            }
        }
    }

    @keyframes comment-fly-in {
        from {
            z-index: -100;
            transform: skewY(-6deg) translate(100vw, 70vw);
            filter: brightness(0);
        }
        to {
            z-index: 0;
            transform: skewY(-6deg);
            filter: brightness(1);
        }
    }
    @keyframes comment-fly-in-2 {
        from {
            filter: brightness(0);
        }
        to {
            filter: brightness(1);
        }
    }

    @keyframes comment-fade-in {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    @media screen and (prefers-reduced-motion: reduce) {
        .background :global(.bg-comment) {
            animation: comment-fade-in 1s;
        }
    }

    @media screen and (width <= 640px) {
        .background .bg-gradient {
            width: 100dvw;
            height: 100dvh;
            background-image: linear-gradient(
                to bottom,
                transparent,
                var(--background-1)
            );
        }
    }
</style>
